---
- name: pkg pre-requisites
  apt: name={{ item }} state=latest
  with_items:
    - git
    - imagemagick
    - ruby-openid
    - ruby
    - build-essential
    - ruby-dev
    - libmysqlclient-dev
    - libpq-dev
    - libmagickwand-dev
    - libsqlite3-dev

- name: Database backup
  mysql_db: name="{{ redmine_db_name }}"
            login_host="{{ redmine_db_host }}"
            login_user="{{ redmine_db_username }}"
            login_password="{{ redmine_db_password }}"
            state=dump
            target="{{ redmine_db_backup_dump }}"
  when: redmine_update
    
- name: Clone redmine project repository
  git: repo={{ redmine_project_repo }}
       dest="{{ redmine_path }}"
       version="{{ redmine_version }}"
       update=no
       accept_hostkey=yes

- name: Configure redmine database
  template: src=database.yml.j2 dest="{{ redmine_path }}/config/database.yml"
  when: not redmine_update
  
- name: Install Bundler
  shell: "gem install bundler"
  args:
    chdir: "{{ redmine_path }}"
  when: not redmine_update
  
- name: Update Dependencies
  shell: bundle update
  args:
    chdir: "{{ redmine_path }}"
  when: redmine_update
  
- name: Copy database dump file to remote
  copy: src={{ redmine_db_dump }} dest=/tmp/redmine_db_dump.sql
  when: redmine_db_dump is defined

- name: Import database dump
  mysql_db: name="{{ redmine_db_name }}" login_host="{{ redmine_db_host }}" \
            login_user="{{ redmine_db_username }}" \
            login_password="{{ redmine_db_password }}" \
            state=import target="/tmp/redmine_db_dump.sql"
  when: redmine_db_dump is defined

- name: Migrate database
  shell: bundle exec rake db:migrate RAILS_ENV=production 
  args:
    chdir: "{{ redmine_path }}"
  when: redmine_update

- name: Migrate plugins
  shell: bundle exec rake redmine:plugins:migrate RAILS_ENV=production
  args:
    chdir: "{{ redmine_path }}"
  when: redmine_update
  
- name: Install redmine dependencies
  shell: bundle install --without development test
  args:
    chdir: "{{ redmine_path }}"
  when: not redmine_update
  
- name: Generate session store secret
  shell: rake generate_secret_token
  args:
   chdir: "{{ redmine_path }}"
  when: not redmine_update
  
- name: Create database schema objects
  shell: RAILS_ENV=production rake db:migrate
  args:
   chdir: "{{ redmine_path }}"
  when: not redmine_update and ( redmine_db_dump is not defined )
  
- name: Set database default data
  shell: RAILS_ENV=production REDMINE_LANG="{{ redmine_lang }}" rake redmine:load_default_data
  args:
   chdir: "{{ redmine_path }}"
  when: not redmine_update

- name: Clean up
  shell: bundle exec rake tmp:cache:clear
  args:
    chdir: "{{ redmine_path }}"
  shell: bundle exec rake tmp:sessions:clear
  args:
    chdir: "{{ redmine_path }}"

- name: Create backup Git repository
  command: "{{ item }}"
  with_items:
  - git init {{ redmine_backup_path }}/git.redmine
  args:
    creates: "{{ redmine_backup_path }}/git.redmine"

- name: Create backup script
  template: src=backup.redmine.sh.j2 dest={{ redmine_backup_path }}/backup.redmine.sh mode=0700

- name: Create cron job for redmine backup
  cron: name="Backup redmine data"
        user=root
        minute=0
        job={{ redmine_backup_path }}/backup.redmine.sh
        